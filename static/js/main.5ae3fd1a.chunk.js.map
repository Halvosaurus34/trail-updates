{"version":3,"sources":["components/AlertCard.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["AlertCard","props","className","title","desc","url","href","target","Form","useState","parkCode","setParkCode","alertData","setAlertData","parkName","setParkName","submitClicked","setSubmitClicked","requestData","event","axios","get","then","response","data","catch","error","console","log","onSubmit","preventDefault","fullName","alert","type","value","onChange","length","map","el","id","description","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAkBeA,MAhBf,SAAmBC,GACjB,OACE,sBAAKC,UAAU,YAAf,UACE,6BAAKD,EAAME,QACX,4BAAIF,EAAMG,OACTH,EAAMI,IACL,mBAAGC,KAAML,EAAMI,IAAKE,OAAO,QAA3B,uBAIA,OCqEOC,G,MA7EF,WACX,IACA,EAAgCC,mBAAS,QAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA0CN,oBAAS,GAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KAwBMC,EAAc,SAACC,GACnBC,IACGC,IADH,2CA7Be,SA6Bf,sBAE8DX,EAF9D,sDAIGY,MAAK,SAAUC,GAEdV,EAAaU,EAASC,KAAKA,SAE5BC,OAAM,SAAUC,GACfC,QAAQC,IAAIF,OAIlB,OACE,sBAAKxB,UAAU,YAAf,UACE,uBAAM2B,SAnCU,SAACV,GACnBA,EAAMW,iBACNV,IACGC,IADH,2DAEwDX,EAFxD,sDAIGY,MAAK,SAAUC,GAEdN,GAAiB,GACjBF,EAAYQ,EAASC,KAAKA,KAAK,GAAGO,UAClCb,OAGDO,OAAM,SAAUC,GACfC,QAAQC,IAAIF,GACZM,MAAM,GAAD,OAAItB,EAAJ,+CAoBP,UACE,+CAEE,uBAAOuB,KAAK,OAAOC,MAAOxB,EAAUyB,SA1CjB,SAAChB,GAC1BR,EAAYQ,EAAMZ,OAAO2B,aA2CrB,uBAAOD,KAAK,SAASC,MAAM,SAAShC,UAAU,qBAE/CY,GAAYF,EAAUwB,OAAS,EAC9B,oBAAIlC,UAAU,YAAd,SAA2BY,IAE3B,GAEDF,EACGA,EAAUyB,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CAEEC,GAAID,EAAGC,GACPpC,MAAOmC,EAAGnC,MACVC,KAAMkC,EAAGE,YACTnC,IAAKiC,EAAGjC,KAJHiC,EAAGC,OAOZ,GACHvB,GAAsC,IAArBJ,EAAUwB,OAC1B,qBAAIlC,UAAU,YAAd,2BAAyCY,EAAzC,OAEA,QChEO2B,MATf,WACE,OACE,sBAAKvC,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,yBACA,cAAC,EAAD,QCMSwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5ae3fd1a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./AlertCard.css\";\r\nfunction AlertCard(props) {\r\n  return (\r\n    <div className=\"alertCard\">\r\n      <h3>{props.title}</h3>\r\n      <p>{props.desc}</p>\r\n      {props.url ? (\r\n        <a href={props.url} target=\"blank\">\r\n          READ MORE\r\n        </a>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlertCard;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport AlertCard from \"./AlertCard\";\r\nimport \"./Form.css\";\r\nconst Form = () => {\r\n  const endpoint = \"alerts\";\r\n  const [parkCode, setParkCode] = useState(\"acad\");\r\n  const [alertData, setAlertData] = useState(\"\");\r\n  const [parkName, setParkName] = useState(\"\");\r\n  const [submitClicked, setSubmitClicked] = useState(false);\r\n  const handleParamsChange = (event) => {\r\n    setParkCode(event.target.value);\r\n  };\r\n\r\n  const requestName = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .get(\r\n        `https://developer.nps.gov/api/v1/parks/?parkCode=${parkCode}&api_key=dtVNDWFBwVoKGYcsGmzzHprM10HDhBT2vyjgCZ0F`\r\n      )\r\n      .then(function (response) {\r\n        // handle success\r\n        setSubmitClicked(true);\r\n        setParkName(response.data.data[0].fullName);\r\n        requestData();\r\n        // setParkName(response.data.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        alert(`${parkCode} doesn't seem to be a valid park code!`);\r\n      });\r\n  };\r\n\r\n  const requestData = (event) => {\r\n    axios\r\n      .get(\r\n        `https://developer.nps.gov/api/v1/${endpoint}/?parkCode=${parkCode}&api_key=dtVNDWFBwVoKGYcsGmzzHprM10HDhBT2vyjgCZ0F`\r\n      )\r\n      .then(function (response) {\r\n        // handle success\r\n        setAlertData(response.data.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"park-form\">\r\n      <form onSubmit={requestName}>\r\n        <label>\r\n          Park Code:\r\n          <input type=\"text\" value={parkCode} onChange={handleParamsChange} />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" className=\"submit-button\" />\r\n      </form>\r\n      {parkName && alertData.length > 0 ? (\r\n        <h2 className=\"park-name\">{parkName}</h2>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {alertData\r\n        ? alertData.map((el) => (\r\n            <AlertCard\r\n              key={el.id}\r\n              id={el.id}\r\n              title={el.title}\r\n              desc={el.description}\r\n              url={el.url}\r\n            />\r\n          ))\r\n        : \"\"}\r\n      {submitClicked && alertData.length === 0 ? (\r\n        <h2 className=\"park-name\">No alerts for {parkName}!</h2>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import \"./App.css\";\nimport Form from \"./components/Form\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Park Alerts</h1>\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}