{"version":3,"sources":["components/AlertCard.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["AlertCard","props","console","log","className","title","desc","url","href","target","Form","useState","parkCode","setParkCode","alertData","setAlertData","parkName","setParkName","requestData","event","axios","get","then","response","data","onSubmit","preventDefault","fullName","type","value","onChange","map","el","id","description","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAqBeA,MAnBf,SAAmBC,GAEjB,OADAC,QAAQC,IAAIF,EAAO,MAEjB,sBAAKG,UAAU,YAAf,UACE,6BAAKH,EAAMI,QACX,8CAAiBJ,EAAMK,QACtBL,EAAMM,IACL,4BACE,mBAAGC,KAAMP,EAAMM,IAAKE,OAAO,QAA3B,SACGR,EAAMM,QAIX,OC+COG,G,MA1DF,WACX,IACA,EAAgCC,mBAAS,QAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAmBMC,EAAc,SAACC,GACnBC,IACGC,IADH,2CAvBe,SAuBf,sBAE8DT,EAF9D,sDAIGU,MAAK,SAAUC,GAEdR,EAAaQ,EAASC,KAAKA,UAIjC,OACE,sBAAKpB,UAAU,YAAf,UACE,uBAAMqB,SA3BU,SAACN,GACnBA,EAAMO,iBACNN,IACGC,IADH,2DAEwDT,EAFxD,sDAIGU,MAAK,SAAUC,GAEdN,EAAYM,EAASC,KAAKA,KAAK,GAAGG,UAClCT,QAkBF,UACE,+CAEE,uBAAOU,KAAK,OAAOC,MAAOjB,EAAUkB,SAlCjB,SAACX,GAC1BN,EAAYM,EAAMV,OAAOoB,aAmCrB,uBAAOD,KAAK,SAASC,MAAM,SAASzB,UAAU,qBAE/CY,EAAW,6BAAKA,IAAiB,GACjCF,EACGA,EAAUiB,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CACEC,GAAID,EAAGC,GACP5B,MAAO2B,EAAG3B,MACVC,KAAM0B,EAAGE,YACT3B,IAAKyB,EAAGzB,SAGZ,QC9CK4B,MATf,WACE,OACE,sBAAK/B,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,QCMSgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e76b0653.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./AlertCard.css\";\r\nfunction AlertCard(props) {\r\n  console.log(props, \"yo\");\r\n  return (\r\n    <div className=\"alertCard\">\r\n      <h3>{props.title}</h3>\r\n      <p>Description: {props.desc}</p>\r\n      {props.url ? (\r\n        <p>\r\n          <a href={props.url} target=\"blank\">\r\n            {props.url}\r\n          </a>\r\n        </p>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlertCard;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport AlertCard from \"./AlertCard\";\r\nimport \"./Form.css\";\r\nconst Form = () => {\r\n  const endpoint = \"alerts\";\r\n  const [parkCode, setParkCode] = useState(\"acad\");\r\n  const [alertData, setAlertData] = useState(\"\");\r\n  const [parkName, setParkName] = useState(\"\");\r\n  const handleParamsChange = (event) => {\r\n    setParkCode(event.target.value);\r\n  };\r\n\r\n  const requestName = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .get(\r\n        `https://developer.nps.gov/api/v1/parks/?parkCode=${parkCode}&api_key=dtVNDWFBwVoKGYcsGmzzHprM10HDhBT2vyjgCZ0F`\r\n      )\r\n      .then(function (response) {\r\n        // handle success\r\n        setParkName(response.data.data[0].fullName);\r\n        requestData();\r\n        // setParkName(response.data.data);\r\n      });\r\n  };\r\n\r\n  const requestData = (event) => {\r\n    axios\r\n      .get(\r\n        `https://developer.nps.gov/api/v1/${endpoint}/?parkCode=${parkCode}&api_key=dtVNDWFBwVoKGYcsGmzzHprM10HDhBT2vyjgCZ0F`\r\n      )\r\n      .then(function (response) {\r\n        // handle success\r\n        setAlertData(response.data.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"park-form\">\r\n      <form onSubmit={requestName}>\r\n        <label>\r\n          Park Code:\r\n          <input type=\"text\" value={parkCode} onChange={handleParamsChange} />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" className=\"submit-button\" />\r\n      </form>\r\n      {parkName ? <h2>{parkName}</h2> : \"\"}\r\n      {alertData\r\n        ? alertData.map((el) => (\r\n            <AlertCard\r\n              id={el.id}\r\n              title={el.title}\r\n              desc={el.description}\r\n              url={el.url}\r\n            />\r\n          ))\r\n        : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import \"./App.css\";\nimport Form from \"./components/Form\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Park Alerts</h1>\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}